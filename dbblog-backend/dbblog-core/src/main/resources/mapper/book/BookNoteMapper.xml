<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dblearn.blog.mapper.book.BookNoteMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.dblearn.blog.entity.book.BookNote">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="author" property="author" />
        <result column="content" property="content" />
        <result column="content_format" property="contentFormat" />
        <result column="read_num" property="readNum" />
        <result column="like_num" property="likeNum" />
        <result column="cover" property="cover" />
        <result column="book_id" property="bookId" />
        <result column="chapter" property="chapter" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="recommend" property="recommend" />
        <result column="category_id" property="categoryId" />
        <result column="publish" property="publish" />
        <result column="cover_type" property="coverType" />
        <result column="top" property="top" />
    </resultMap>

    <resultMap id="WithSubList" type="cn.dblearn.blog.entity.book.vo.BookNoteVO" extends="BaseResultMap">
        <association property="tagList" column="{linkId=id,type=type}" select="cn.dblearn.blog.mapper.operation.TagMapper.listByLinkId"/>
        <association property="book" column="{id=book_id}" select="cn.dblearn.blog.mapper.book.BookMapper.selectById"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, title, description, author, content, content_format, read_num, like_num, cover, book_id, chapter, create_time, update_time, recommend, category_id, publish, cover_type, top
    </sql>

    <sql id="homeBookNoteColumn">
        id,title,description,author,read_num,like_num,cover,create_time,book_id,chapter,cover_type,top
    </sql>

    <sql id="manageBookNoteColumn">
       id,title,description,author,read_num,like_num,cover,create_time,top,publish,recommend,category_id
    </sql>

    <select id="listBookNoteVo" resultType="cn.dblearn.blog.entity.book.vo.BookNoteVO">
        select <include refid="manageBookNoteColumn"/> from book_note
        <where>
            <if test="params.title!=null and params.title !=''">
                and title like concat('%',#{params.title},'%')
            </if>
        </where>
        order by update_time desc
    </select>
    
    <select id="queryPageCondition" resultMap="WithSubList">
        select <include refid="homeBookNoteColumn"/>, 2 as `type` from book_note
        <where>
            <if test="params.recommend != null">
                and recommend = true
            </if>
            <if test="params.categoryId !=null and params.categoryId != ''">
                and find_in_set(#{params.categoryId},category_id)
            </if>
            and publish = true
        </where>
        <if test="params.recommend !=null">
            order by top desc, recommend desc
        </if>
        <if test="params.latest !=null">
            order by top desc, create_time desc
        </if>
        <if test="params.favorite !=null">
            order by top desc, like_num desc
        </if>
    </select>

    <update id="updateReadNum">
        update book_note set read_num = read_num + 1 where id = #{id}
    </update>

    <select id="getSimpleBookNoteVo" resultType="cn.dblearn.blog.entity.book.vo.BookNoteVO">
        select <include refid="homeBookNoteColumn"/> from book_note where id = #{id}
    </select>

    <select id="listSimpleBookNote" resultType="cn.dblearn.blog.entity.book.BookNote">
        select <include refid="homeBookNoteColumn"/> from book_note where book_id = #{bookId}
    </select>

    <update id="updateLikeNum">
        update book_note set like_num = like_num + 1 where id = #{id}
    </update>

    <select id="checkByCategory" resultType="Integer">
        select count(*) from book_note where category_id = #{categoryId}
    </select>

</mapper>
